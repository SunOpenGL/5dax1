local EXPECTED_URL = "https://raw.githubusercontent.com/SunOpenGL/5dax1/refs/heads/main/2x4"

-- ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏• validate
getgenv()._SomtankValidated = {
    ok = false,
    hash = nil
}

local validateKeySystem = newcclosure(function()
    if not getgenv().SOMTANK_KEY then
        return warn("‚ùå Unauthorized! Must pass key system first.")
    end

    local info = rawget(getgenv(), "_SomtankMarker")
    if type(info) ~= "table"
        or info.url ~= "Somtank_Huntyzombie"
        or typeof(info.token) ~= "Instance"
        or info.sourceUrl ~= EXPECTED_URL
        or not info.hash
        or not info.salt then
        return warn("‚ùå Invalid loader info or unauthorized source!")
    end

    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö hash + salt
    local ok, source = pcall(function()
        return game:HttpGet(EXPECTED_URL)
    end)
    if not ok or not source then
        return warn("‚ùå Failed to fetch script source")
    end

    local currentHash = crypt.hash(source .. info.salt, "sha384")
    if currentHash ~= info.hash then
        return warn("‚ùå Script hash mismatch (salted), possible tampering")
    end

    -- ‡∏ú‡πà‡∏≤‡∏ô
    getgenv()._SomtankValidated.ok = true
    getgenv()._SomtankValidated.hash = info.hash
end)

-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å validate
validateKeySystem()

-- ‡∏à‡∏∏‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î üöß ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô script ‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢
assert(getgenv()._SomtankValidated.ok, "‚ùå Unauthorized! Must run through KeySystem first.")

-- ====== ‡πÇ‡∏Ñ‡πâ‡∏î‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ======
print("‚úÖ Verified with salted hash:", getgenv()._SomtankValidated.hash)

-- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏Ñ‡πâ‡∏î UI ‡∏´‡∏£‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 100
