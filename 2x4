-- Expected URL ‡∏Ç‡∏≠‡∏á main script
local EXPECTED_URL = "https://raw.githubusercontent.com/SunOpenGL/5dax1/refs/heads/main/2x4"

-- ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏±‡∏ß‡∏à‡∏£‡∏¥‡∏á
local _http_request = http_request or request
local _HttpGet = game.HttpGet
local _HttpGetAsync = game.HttpGetAsync

-- Anti-Spy ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ô hook ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏≤‡∏°‡∏±‡πâ‡∏¢
local function isHooked(fn)
    return not iscclosure(fn) -- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà cclosure = ‡πÇ‡∏î‡∏ô hook
end

local function assertSafe(fn, name)
    if not fn or isHooked(fn) then
        warn("üö´ HTTP Spy detected! ["..name.."] is hooked or missing.")
        return false
    end
    return true
end

-- Wrapper ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
local function safe_request(args)
    if not assertSafe(_http_request, "http_request") then return end
    if args and args.Url and args.Url:match("127.0.0.1:6463") then
        return warn("üö´ Blocked Discord RPC")
    end
    return _http_request(args)
end

-- Override http_request
if _http_request then
    getgenv().http_request = newcclosure(safe_request)
end

-- HttpGet
if _HttpGet then
    hookfunction(_HttpGet, newcclosure(function(self, url, ...)
        if url and url:match("127.0.0.1:6463") then
            return warn("üö´ Blocked suspicious HttpGet:", url)
        end
        return _HttpGet(self, url, ...)
    end))
end

-- HttpGetAsync
if _HttpGetAsync then
    hookfunction(_HttpGetAsync, newcclosure(function(self, url, ...)
        if url and url:match("127.0.0.1:6463") then
            return warn("üö´ Blocked suspicious HttpGetAsync:", url)
        end
        return _HttpGetAsync(self, url, ...)
    end))
end

------------------------------------------------------------------
-- Key Validation
local validateKeySystem = newcclosure(function()
    if not getgenv().SOMTANK_KEY then
        return warn("‚ùå Unauthorized! Must pass key system first.")
    end

    local info = rawget(getgenv(), "_SomtankMarker")
    if type(info) ~= "table"
        or info.url ~= "Somtank_Huntyzombie"
        or typeof(info.token) ~= "Instance"
        or info.sourceUrl ~= EXPECTED_URL then
        return warn("‚ùå Invalid loader info or unauthorized source!")
    end

    -- ‡∏•‡πâ‡∏≤‡∏á marker ‡∏´‡∏•‡∏±‡∏á validate
    pcall(function()
        getgenv()._SomtankMarker = nil
        getgenv().SOMTANK_KEY = false
    end)

    print("‚úÖ Main script loaded successfully from:", EXPECTED_URL)
end)

validateKeySystem()
